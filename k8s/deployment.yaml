apiVersion: apps/v1
kind: Deployment
metadata:
  name: jasperreports-mcp-server
  namespace: jasperreports-mcp
  labels:
    app.kubernetes.io/name: jasperreports-mcp-server
    app.kubernetes.io/component: server
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jasperreports-mcp-server
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jasperreports-mcp-server
        app.kubernetes.io/component: server
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: jasperreports-mcp-server
        image: ghcr.io/user/jasperreports-mcp-server:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        # Load configuration from ConfigMap
        - name: JASPER_AUTH_TYPE
          valueFrom:
            configMapKeyRef:
              name: jasperreports-mcp-config
              key: JASPER_AUTH_TYPE
        - name: JASPER_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: jasperreports-mcp-config
              key: JASPER_TIMEOUT
        - name: JASPER_SSL_VERIFY
          valueFrom:
            configMapKeyRef:
              name: jasperreports-mcp-config
              key: JASPER_SSL_VERIFY
        - name: JASPER_DEBUG_MODE
          valueFrom:
            configMapKeyRef:
              name: jasperreports-mcp-config
              key: JASPER_DEBUG_MODE
        - name: TEST_SERVER_ENABLED
          valueFrom:
            configMapKeyRef:
              name: jasperreports-mcp-config
              key: TEST_SERVER_ENABLED
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: jasperreports-mcp-config
              key: NODE_ENV
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: jasperreports-mcp-config
              key: LOG_LEVEL
        # Load sensitive configuration from Secret
        - name: JASPER_URL
          valueFrom:
            secretKeyRef:
              name: jasperreports-mcp-secret
              key: JASPER_URL
        - name: JASPER_USERNAME
          valueFrom:
            secretKeyRef:
              name: jasperreports-mcp-secret
              key: JASPER_USERNAME
        - name: JASPER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: jasperreports-mcp-secret
              key: JASPER_PASSWORD
        - name: JASPER_ORGANIZATION
          valueFrom:
            secretKeyRef:
              name: jasperreports-mcp-secret
              key: JASPER_ORGANIZATION
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - node
            - -e
            - "console.log('Health check passed')"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - node
            - -e
            - "console.log('Ready check passed')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      - name: config
        configMap:
          name: jasperreports-mcp-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30